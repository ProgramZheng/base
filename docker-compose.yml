version: '3'

services:
    #api
    api:
      build:
        context: .
        args:
          - WORKSPACE=${WORKSPACE}
      restart: always
      volumes:
        - ${DATA_PATH_HOST}/api/${APP_NAME}/upload:/api/upload
        - ${DATA_PATH_HOST}/api/${APP_NAME}/log:/api/log
      links:
        - mysql
      command: bash -c "go install &&
                        ${APP_NAME} http"
      networks:
        - backend
    #mysql
    mysql:
      build: ./docker/mysql
      ports:
        - ${DB_PORT}:${DB_PORT}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      environment:
        - MYSQL_VERSION=${MYSQL_VERSION}
        - MYSQL_DATABASE=${APP_NAME}
        - MYSQL_USER=${APP_NAME}
        - MYSQL_PASSWORD=${APP_NAME}
        - MYSQL_PORT=${MYSQL_PORT}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_ENTRYPOINT_INITDB=${MYSQL_ENTRYPOINT_INITDB}
        - TZ=${TZ}
      networks:
        - backend
    #adminer
    adminer:
      build: ./docker/adminer
      environment:
        - ADMINER_DEFAULT_SERVER=${ADMINER_DEFAULT_SERVER}
      networks:
        - backend
    #minio
    minio:
      build: ./docker/minio
      volumes:
        - ${DATA_PATH_HOST}/minio:/data
      #   - ${CONFIG_PATH_HOST}/minio:/root/.minio
      ports:
        - "9000:9000"
      environment:
        - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
        - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      command: server /data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
      networks:
        - backend
    #ngrok
    ngrok:
      build:
        context: ./docker/ngrok
      ports:
        - "${NGROK_PORT}:4040"
      environment:
        - NGROK_AUTH=${NGROK_AUTHTOKEN}
        - NGROK_PROTOCOL=http
        - NGROK_REGION=ap
        - NGROK_PORT=${WORKSPACE}:80
      depends_on:
        - ${WORKSPACE}
      networks:
        - backend
networks:
  backend:
    external: true